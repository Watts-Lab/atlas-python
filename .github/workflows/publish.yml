name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., 0.1.0)"
        required: true
      test_pypi:
        description: "Publish to Test PyPI first"
        required: true
        default: "true"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  test-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.test_pypi == 'true' || github.event_name == 'release'
    environment:
      name: test-pypi
      url: https://test.pypi.org/project/atlas-sdk/

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install twine
        run: pip install twine

      - name: Publish to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --repository testpypi dist/* --verbose

      - name: Test installation from Test PyPI
        run: |
          sleep 60  # Wait for package to be available
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ atlas-sdk
          python -c "import atlas_sdk; print(f'Successfully installed atlas-sdk {atlas_sdk.__version__}')"

  pypi:
    needs: [build, test-pypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event.inputs.test_pypi == 'false'
    environment:
      name: pypi
      url: https://pypi.org/project/atlas-sdk/

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install twine
        run: pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
